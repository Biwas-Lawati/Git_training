Git Configuration:
git config --global user.name "Your Name"             # Set global username
git config --global user.email "you@example.com"      # Set global email
git config --list                                     # List all config settings

Repository Setup:
git init                                              # Initialize a new Git repo
git clone <url>                                       # Clone a remote repo

Status and Logs:
git status                                            # Show current status
git log                                               # Show commit history
git log --oneline                                     # One-line summary of commits
git diff                                              # Show unstaged changes
git diff --staged                                     # Show staged changes

Staging and Committing:
git add <file>                                        # Stage a file
git add .                                             # Stage all files
git commit -m "Message"                               # Commit staged changes
git commit -am "Message"                              # Add & commit tracked files in one step

Branching and Merging:
git branch                                            # List local branches
git branch <name>                                     # Create a new branch
git checkout <name>                                   # Switch to a branch
git checkout -b <name>                                # Create and switch to a branch
git merge <branch>                                    # Merge a branch into current branch
git branch -d <name>                                  # Delete a local branch
git push origin --delete <branch>                     # Delete remote branch

Remote Repositories:
git remote -v                                         # List remotes
git remote add origin <url>                           # Add a remote
git fetch                                             # Fetch updates from remote
git pull                                              # Pull latest changes
git push                                              # Push changes to remote
git push -u origin <branch>                           # Push new branch and track

Undo Changes:
git restore <file>                                    # Restore file to last committed version
git reset HEAD <file>                                 # Unstage file
git reset --hard                                      # Reset all changes (DANGEROUS)
git revert <commit>                                   # Revert a specific commit

Cleanup and Pruning:
git clean -f                                          # Remove untracked files
git fetch --prune                                     # Remove deleted remote branches locally

Stash Changes (Temp Save):
git stash                                             # Stash current changes
git stash list                                        # Show stashes
git stash apply                                       # Re-apply last stash
git stash drop                                        # Delete last stash

Tags:
git tag                                               # List tags
git tag <name>                                        # Create a tag
git push origin <tag>                                 # Push a tag to remote

1. Resolving Merge Conflicts
git merge <branch>                      # Attempt to merge a branch
# If conflict occurs:
# Edit the conflicting files manually
git status                              # See files with conflicts
git add <file>                          # Mark conflict as resolved
git commit                              # Complete the merge
To abort a merge:
git merge --abort

2. Remote Setup and Management:
git remote -v                          # Show remote URLs
git remote add origin <url>           # Add remote repo
git remote set-url origin <url>       # Change remote URL
git push -u origin <branch>           # Push branch and set upstream
git push origin --delete <branch>     # Delete branch from remote
3. Fixing Common Mistakes
Undo last commit (keep changes):
git reset --soft HEAD~1
Undo last commit (discard changes):
git reset --hard HEAD~1
Unstage a file:
git reset HEAD <file>
Restore file to last committed version:
git restore <file>

4. Using Git Stash (Temporarily Save Work)
git stash                              # Stash current changes
git stash save "message"               # Save stash with message
git stash list                         # List all stashes
git stash apply                        # Re-apply most recent stash
git stash apply stash@{1}              # Apply a specific stash
git stash drop                         # Delete most recent stash

5. Deleting Files
Delete a file and commit:
git rm filename.txt
git commit -m "Delete file"
Keep file locally but remove from Git tracking:
git rm --cached filename.txt
git commit -m "Untrack file"

6. Fixing Merge Conflicts in a Specific File
# After conflict, open the file:
# Look for markers like:
# <<<<<<< HEAD
# your changes
# =======
# incoming changes
# >>>>>>> other-branch

# Edit to resolve manually, then:
git add <file>
git commit

7. Reverting Changes
Revert a specific commit (creates a new commit that undoes it):
git log                              # Get commit hash
git revert <commit_hash>

Discard all uncommitted changes:
git reset --hard HEAD

8. Push/Pull Workflow
git pull origin main                 # Pull latest from main
git push origin main                 # Push your commits

----------------------------------------
1. Local Branches
.git/refs/heads/main
2. Remote-Tracking Branches
.git/refs/remotes/origin/main
To View Branches in Terminal
Local branches:
git branch
Remote-tracking branches:
git branch -r
All branches (local + remote):
git branch -a
Optional: See Full Path Internally
ls .git/refs/heads/
ls .git/refs/remotes/origin/
git show-ref


Goal	                        Command
Clone repo with all branches ->	git clone <url>
Switch to another branch ->	git checkout <branch-name>
Create local branch from remote branch -> git checkout -b newbranch origin/newbranch
Get a file from another branch -> git checkout <branch> -- <file> 
View available branches -> git branch -a



